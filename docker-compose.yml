#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-build: &superset-build
  args:
    NPM_BUILD_CMD: build-dev
  context: ./
  dockerfile: Dockerfile-dev

x-superset-depends-on: &superset-depends-on
  - db
  - redis

# /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
x-superset-volumes: &superset-volumes
  - ./docker/docker-init.sh:/app/docker-init.sh
  - ./docker/pythonpath_dev:/app/pythonpath
  - ./superset:/app/superset
  - ./superset-frontend:/app/superset-frontend
  - ./bin2:/bin2
  - node_modules:/app/superset-frontend/node_modules
  - superset_home:/app/superset_home

version: "3.7"
services:
  redis:
    image: redis:3.2
    container_name: superset_cache
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis:/data

  db:
    env_file: docker/.env
    image: postgres:10
    container_name: superset_db
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - db_home:/var/lib/postgresql/data

  superset:
    env_file: docker/.env
    build: *superset-build
    container_name: superset_app
    user: "root:root"
    command:
      [
        "sh",
        "-c",
        "/bin2/run-once.sh /bin2/app-init.sh && flask run -p 8088 --with-threads --reload --debugger --host=0.0.0.0",
      ]
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    build: *superset-build
    container_name: superset_init
    command: ["sh", "-c", "/bin2/run-once.sh /bin2/db-init.sh"]
    env_file: docker/.env
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-node:
    image: node:10-jessie
    container_name: superset_node
    command:
      [
        "bash",
        "-c",
        "/bin2/run-once.sh /bin2/node-init.sh && cd /app/superset-frontend && npm run prod",
      ]
    restart: unless-stopped
    env_file: docker/.env
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-worker:
    build: *superset-build
    container_name: superset_worker
    command:
      [
        "celery",
        "worker",
        "--app=superset.tasks.celery_app:app",
        "-Ofair",
        "-l",
        "INFO",
      ]
    env_file: docker/.env
    restart: unless-stopped
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-tests-worker:
    build: *superset-build
    container_name: superset_tests_worker
    command:
      [
        "celery",
        "worker",
        "--app=superset.tasks.celery_app:app",
        "-Ofair",
        "-l",
        "INFO",
      ]
    env_file: docker/.env
    environment:
      DATABASE_HOST: superset_db
      DATABASE_DB: test
      REDIS_CELERY_DB: 2
      REDIS_RESULTS_DB: 3
      REDIS_HOST: superset_cache
    # network_mode: host
    depends_on: *superset-depends-on
    volumes: *superset-volumes

volumes:
  superset_home:
    external: false
  node_modules:
    external: false
  db_home:
    external: false
  redis:
    external: false
